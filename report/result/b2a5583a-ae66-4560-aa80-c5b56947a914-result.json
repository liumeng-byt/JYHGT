{"name": "test_new_sample", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_case.TestCase object at 0x000001BEAE408DC8>\n\n    def test_new_sample(self):\n>       NewSampleHandle().page_excute_new_sample(\"样品名称\")\n\ntest_case.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\page\\sample_page.py:47: in page_excute_new_sample\n    self.page_click_sample_manage_menu()\n..\\page\\sample_page.py:15: in page_click_sample_manage_menu\n    self.base_click(page.sample_manage_menu)\n..\\base\\base.py:17: in base_click\n    self.base_find_element(loc).click()\n..\\base\\base.py:13: in base_find_element\n    return WebDriverWait(self.driver, timeout=timeout, poll_frequency=poll).until(lambda x: x.find_element(*loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c241dbec0a449a111b2b07eff5db8f4b\")>\nmethod = <function Base.base_find_element.<locals>.<lambda> at 0x000001BEAE3E0D38>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Program Files\\Python\\Python37\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "start": 1686042757127, "stop": 1686042778396, "uuid": "ee2175d2-bec8-420a-ad66-8f20f878e7c5", "historyId": "9f7aeb6f01643437a7de18750487066a", "testCaseId": "9f7aeb6f01643437a7de18750487066a", "fullName": "testcase.test_case.TestCase#test_new_sample", "labels": [{"name": "feature", "value": "TestCase"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_case"}, {"name": "subSuite", "value": "TestCase"}, {"name": "host", "value": "lll"}, {"name": "thread", "value": "27500-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_case"}]}